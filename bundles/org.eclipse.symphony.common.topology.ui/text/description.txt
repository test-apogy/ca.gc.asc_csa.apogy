Model TopologyUi

This model description is not a real EMF artifact. It was generated by the
org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's
code generator can be extended.
This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.

Package ui <http:///ca/gc/space/topology/ui.ecore>

  Class NodePresentation
    Reference node : Node
    Attribute color : RGB
    Attribute visible : EBoolean
    Reference /centroid : Tuple3d
    Reference /min : Tuple3d
    Reference /max : Tuple3d
    Attribute /xRange : EDouble
    Attribute /yRange : EDouble
    Attribute /zRange : EDouble
    Reference children : NodePresentation<<0..*>>
    Reference parent : NodePresentation
    Attribute /leaf : EBoolean
    Reference /leafNode : Node
    Attribute sceneObject : SceneObject
    Attribute useInBoundingCalculation : EBoolean
    Attribute shadowMode : ShadowMode
    Operation accept(List) : List
    Operation accept(NodePresentationVisitor) : void

  Class PresentationTopology -> PresentationTopologyEventProvider
    Reference presentationNodesRoot : NodePresentation
    Reference sceneTransformation : Matrix4x4
    Reference topology : Node
    Attribute axisVisible : EBoolean
    Reference sceneCentroid : Tuple3d
    Attribute dragAndDropMode : EBoolean
    Reference referenceNode : NodePresentation
    Reference graphicalContext : GraphicsContext
    Operation getVisibleNodes() : NodePresentation<<0..*>>
    Operation getPresentationNodes() : NodePresentation<<0..*>>
    Operation add(NodePresentation) : void
    Operation remove(NodePresentation) : void
    Operation getPresentationNode(Node) : NodePresentation
    Operation getViewPointList() : List

  Class TopologyImporter
    Attribute progressMonitor : IProgressMonitor
    Operation process(Node) : PresentationTopology

  Class TopologyFacade
    Operation generateNodeToNodePresentationMap(PresentationTopology) : EMap
    Operation createTopologyListener(EMap, GroupNode, PresentationTopology) : TopologyListener
    Operation findExtent(Node, PresentationTopology, Tuple3d, Tuple3d) : void

  Class TopologyListener -> NodePresentationVisitor
    Reference presentationTopology : PresentationTopology
    Reference topology : GroupNode
    Attribute nodeToNodePresentationMap : EMap
    Reference renderEngineDelegate : RenderEngineDelegate
    Reference sceneObjectRegistry : SceneObjectRegistry
    Operation unregisterListeners() : void

  Class TransformNodePresentation -> NodePresentation
    Attribute axisVisible : EBoolean
    Attribute axisLenght : EDouble

  Class RotationNodePresentation -> NodePresentation
    Attribute axisVisible : EBoolean
    Attribute axisLenght : EDouble

  Class PositionNodePresentation -> NodePresentation
    Attribute axisVisible : EBoolean
    Attribute axisLenght : EDouble

  Class URLNodePresentation -> NodePresentation
    Attribute axisVisible : EBoolean
    Attribute axisLenght : EDouble
    Attribute presentationMode : MeshPresentationMode

  Class RenderEngineDelegate
    Attribute adapterContext : Object
    Reference sceneObjectRegistry : SceneObjectRegistry
    Operation getSceneObject(Node) : SceneObject
    Operation childAdded(GroupNode, Node) : void
    Operation childRemoved(GroupNode, Node) : void
    Operation registerView(View) : void
    Operation unregisterView(View) : void
    Operation getTopologyNode(Object) : Node
    Operation registerSceneGraphObject(Object, Node) : void
    Operation registerSceneObject(Node, SceneObject) : void
    Operation unregisterAllSceneGraphObjects() : void
    Operation unregisterAllSceneObjects() : void
    Operation registerViewPoint(ViewPoint) : void
    Operation unregisterViewPoint(ViewPoint) : void

  Class PresentationTopologyEventProvider
    Operation addPresentationTopologyListener(PresentationToplogyListener) : void
    Operation removePresentationTopologyListener(PresentationToplogyListener) : void
    Operation fireNodeAdded(NodePresentation) : void
    Operation fireNodeRemoved(NodePresentation) : void
    Operation firePresentationTopologyLoaded() : void

  Class GraphicsContext
    Reference presentationTopology : PresentationTopology<<1..1>>
    Reference views : View<<0..*>>
    Reference renderEngineDelegate : RenderEngineDelegate
    Reference topology : Node
    Operation findView(EString, EString) : View

  Class ViewPoint -> NodePresentation
    Attribute name : EString

  Class ArbitraryViewPoint -> ViewPoint

  Class View
    Reference viewPoint : ViewPoint
    Attribute topologyViewer : ITopologyViewer
    Attribute id : EString
    Attribute secondaryId : EString
    Attribute viewPart : IViewPart
    Attribute master : EBoolean

  Class NodePresentationVisitor
    Attribute nodePresentationType : Class
    Operation visit(NodePresentation) : void

  Class CameraViewPoint -> ViewPoint
    Attribute /verticalFOV : EDouble
    Attribute /horizontalFOV : EDouble
    Attribute /minimumDistance : EDouble
    Attribute /maximumDistance : EDouble

  Class SceneObjectRegistry
    Operation register(NodePresentation) : void
    Operation getSceneObject(Object) : SceneObject
    Operation getNodePresentation(Object) : NodePresentation
    Operation getNodePresentation(Node) : NodePresentation
    Operation getSceneObject(Node) : SceneObject
    Operation getTopologyNode(Object) : Node
    Operation unregister(NodePresentation) : void
    Operation getRegisteredObjects() : Collection

  Enum MeshPresentationMode
    Literal POINTS = 0
    Literal SURFACE = 1
    Literal WIREFRAME = 2

  Enum ShadowMode
    Literal INHERIT = 0
    Literal OFF = 1
    Literal CAST = 2
    Literal RECEIVE = 3
    Literal CAST_AND_RECEIVE = 4

  DataType PresentationToplogyListener <org.eclipse.symphony.common.topology.ui.PresentationToplogyListener>

  DataType WeakReference <java.lang.ref.WeakReference>

  DataType Collection <java.util.Collection>

  DataType SceneObject <org.eclipse.symphony.common.topology.ui.SceneObject>

  DataType ITopologyViewer <org.eclipse.symphony.common.topology.ui.ITopologyViewer>

  DataType IProgressMonitor <org.eclipse.core.runtime.IProgressMonitor>

  DataType RGB <org.eclipse.swt.graphics.RGB>

  DataType IViewPart <org.eclipse.ui.IViewPart>

  DataType List <java.util.List>

  DataType Exception <java.lang.Exception>

  DataType Class <java.lang.Class>
