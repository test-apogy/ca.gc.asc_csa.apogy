/*
 * Copyright (c) 2016 Canadian Space Agency (CSA) / Agence spatiale canadienne (ASC).
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Pierre Allard (Pierre.Allard@canada.ca), 
 *     Regent L'Archeveque (Regent.Larcheveque@canada.ca),
 *     Sebastien Gemme (Sebastien.Gemme@canada.ca),
 *     Canadian Space Agency (CSA) - Initial API and implementation
 */
@GenModel(prefix="ApogyCorePrograms",
		  childCreationExtenders="true",
		  extensibleProviderFactory="true",
		  multipleEditorPages="false",
		  copyrightText="Copyright (c) 2016 Canadian Space Agency (CSA) / Agence spatiale canadienne (ASC).
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

Contributors:
    Pierre Allard (Pierre.Allard@canada.ca), 
    Regent L'Archeveque (Regent.Larcheveque@canada.ca),
    Sebastien Gemme (Sebastien.Gemme@canada.ca),
    Canadian Space Agency (CSA) - Initial API and implementation",
		  modelName="ApogyCorePrograms")
@GenModel(modelDirectory="/ca.gc.asc_csa.apogy.core.programs/src-generated")
@GenModel(editDirectory="/ca.gc.asc_csa.apogy.core.programs.edit/src-generated")

package ca.gc.asc_csa.apogy.core.programs

/*
 * This class defines the main specifications of the Program runtime.  
 * The intent is to support capabilities similar to the Debug capabilities.
 * Specialized {@link Program} must provide its own {@link ProgramRuntime}.  
 */
import ca.gc.asc_csa.apogy.core.invocator.Program
import ca.gc.asc_csa.apogy.core.invocator.InvocatorSession
import ca.gc.asc_csa.apogy.core.invocator.Variable
import ca.gc.asc_csa.apogy.common.emf.Exception
import ca.gc.asc_csa.apogy.core.invocator.OperationCall

abstract class AbstractProgramRuntime
{
	refers Program program
	op void resume()
	op void suspend()
	op void terminate()	
	op void stepInto()
	op void stepOver()
	op void stepReturn()
}

/*
 * The program runtimes must use this to interact with the EMF invocator Singleton.
 */
class ApogyCoreProgramsFacade
{
	refers transient readonly volatile InvocatorSession session
	refers transient readonly volatile Variable[0..*] variables	
	op Object exec(OperationCall operationCall) throws Exception
}

class TimeInterval
{
	long startTime	
	long endTime	
 	
 	readonly derived long duration get
 	{
 		return endTime - startTime
 	}
}