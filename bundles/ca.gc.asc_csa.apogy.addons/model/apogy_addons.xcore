/*
 * Copyright (c) 2016 Canadian Space Agency (CSA) / Agence spatiale canadienne (ASC).
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Pierre Allard (Pierre.Allard@canada.ca), 
 *     Regent L'Archeveque (Regent.Larcheveque@canada.ca),
 *     Sebastien Gemme (Sebastien.Gemme@canada.ca),
 *     Canadian Space Agency (CSA) - Initial API and implementation
 */
@GenModel(prefix="ApogyAddons",
copyrightText="Copyright (c) 2016 Canadian Space Agency (CSA) / Agence spatiale canadienne (ASC).
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

Contributors:
    Pierre Allard (Pierre.Allard@canada.ca), 
    Regent L'Archeveque (Regent.Larcheveque@canada.ca),
    Sebastien Gemme (Sebastien.Gemme@canada.ca),
    Canadian Space Agency (CSA) - Initial API and implementation",	
		  childCreationExtenders="true",
		  extensibleProviderFactory="true",
		  multipleEditorPages="false",
		  copyrightText="Agence spatiale canadienne / Canadian Space Agency 2014 Copyrights (c)",
		  modelName="ApogyAddons",
		  complianceLevel="6.0",
		  suppressGenModelAnnotations="false")
@GenModel(modelDirectory="/ca.gc.asc_csa.apogy.addons/src-generated")
@GenModel(editDirectory="/ca.gc.asc_csa.apogy.addons.edit/src-generated")

package ca.gc.asc_csa.apogy.addons

import ca.gc.asc_csa.apogy.common.emf.Described
import ca.gc.asc_csa.apogy.common.emf.Named
import ca.gc.asc_csa.apogy.core.invocator.AbstractToolsListContainer
import ca.gc.asc_csa.apogy.core.invocator.Variable
import ca.gc.asc_csa.apogy.core.FeatureOfInterestList
import ca.gc.asc_csa.apogy.core.PoseProvider
import ca.gc.asc_csa.apogy.common.math.Matrix4d
import ca.gc.asc_csa.apogy.common.math.Tuple3d
import ca.gc.asc_csa.apogy.addons.geometry.paths.WayPointPath
import ca.gc.asc_csa.apogy.common.topology.Node
import ca.gc.asc_csa.apogy.common.topology.AggregateGroupNode

type Color3f wraps javax.vecmath.Color3f

type NodeSelection wraps ca.gc.asc_csa.apogy.common.topology.ui.NodeSelection

abstract class AbstractTool extends Named, Described
{
}

class SimpleToolList extends AbstractToolsListContainer
{
	@GenModel(property="None")	
	contains SimpleTool[0..*] simpleTools opposite toolList
}

abstract class SimpleTool extends AbstractTool
{		
	/**
	 * The SimpleToolList containing the tool.
	 */
	refers SimpleToolList toolList opposite simpleTools
	
	/**
	 * Whether or  not the tool is active.
	 */
	transient boolean active = "false"
	
	/**
	 * Whether or  not the tool is disposed.
	 */
	@GenModel(property="Readonly")
	transient boolean disposed = "false"
	
	/**
	 * Method called when the tool is added to its toolList.
	 */
	op void initialise()
	
	/**
	 * Method called when the tool is remove from its toolList.
	 */
	op void dispose()
}

abstract class Simple3DTool extends SimpleTool
{		
	/**
	 * Whether or  not the tool is visible.
	 */
	boolean visible = "true"		

	/** The root node of the current topology. Is set automatically by Apogy after the tool is registered.*/
	refers transient Node rootNode
	
	/** Method called upon a user selection in the 3D viewer. Sub-classes should implement. */
	op void selectionChanged(NodeSelection nodeSelection)
}

abstract class AbstractTwoPoints3DTool extends Simple3DTool
{
	// FROM NODE		
	@GenModel(notify="true", children="false", property="Readonly", propertyCategory="FROM_NODE")
	refers transient Tuple3d fromAbsolutePosition
			
	@GenModel(notify="true", children="false", property="Readonly", propertyCategory="FROM_NODE")
	refers transient Tuple3d fromRelativePosition
	
	@GenModel(notify="true", children="false", property="Readonly", propertyCategory="FROM_NODE")	
	refers transient Node fromNode
	
	@GenModel(notify="true", propertyCategory="FROM_NODE")	
	boolean fromNodeLock = "false"
				
	// TO NODE		
	@GenModel(notify="true", children="false", property="Readonly", propertyCategory="TO_NODE")
	refers transient Tuple3d toAbsolutePosition
	
	@GenModel(notify="true", children="false", property="Readonly", propertyCategory="TO_NODE")	
	refers transient Tuple3d toRelativePosition
	
	@GenModel(notify="true", children="false", property="Readonly", propertyCategory="TO_NODE")	
	refers transient Node toNode	
	
	@GenModel(notify="true", propertyCategory="TO_NODE")	
	boolean toNodeLock = "false"	
		
	@GenModel(notify="true", property="Readonly", apogy_units = "m")	
	transient double distance = "0"
		
	/* Method called when the pose between from and to changes. */
	op void pointsRelativePoseChanged(Matrix4d newPose)
}

/*
 * A 3D tool used to measure distance between two points.
 */
class Ruler3DTool extends AbstractTwoPoints3DTool
{		
	/* The ruler color. */
	@GenModel(propertyCategory="RULER_PROPERTIES")
	Color3f rulerColor = "0.0,1.0,0.0"
	
	/* Radius of sphere used as ruler end points. */
	@GenModel(notify="true", apogy_units = "m", propertyCategory="RULER_PROPERTIES")	
	double extremitiesRadius = "0.01"
	
	// MINOR TICKS
	
	/* Minor tick color. */
	@GenModel(propertyCategory="MINOR_TICKS_PROPERTIES")
	Color3f minorTickColor = "0.0,1.0,0.0"
	
	/* Spacing between minor tick mark.*/
	@GenModel(notify="true", apogy_units = "m", propertyCategory="MINOR_TICKS_PROPERTIES")	
	double minorTickSpacing = "0.1"
	
	/* Length of the minor tick marks as displayed on the ruler.*/
	@GenModel(notify="true", apogy_units = "m", propertyCategory="MINOR_TICKS_PROPERTIES")	
	double minorTickLength = "0.1"
	
	// MAJOR TICKS
	
	/* Major tick color. */
	@GenModel(propertyCategory="MAJOR_TICKS_PROPERTIES")
	Color3f majorTickColor = "0.0,1.0,0.0"
	
	/* Spacing between major tick mark.*/
	@GenModel(notify="true", apogy_units = "m", propertyCategory="MAJOR_TICKS_PROPERTIES")	
	double majorTickSpacing = "1.0"

	/* Length of the major tick marks as displayed on the ruler.*/
	@GenModel(notify="true", apogy_units = "m", propertyCategory="MAJOR_TICKS_PROPERTIES")	
	double majorTickLength = "0.2"
		
	/* Topology Node associated with the tool. */
	@GenModel(notify="true", children="true", property="Readonly", propertyCategory="RULER_PROPERTIES")	
	refers transient Ruler3dToolNode ruler3dToolNode opposite ruler3DTool
}

class Ruler3dToolNode extends Node
{	
	refers transient Ruler3DTool ruler3DTool opposite ruler3dToolNode	
}

/*
 * A 3D tool used to create FeatureOfInterest.
 */
class FeatureOfInterestPickingTool extends Simple3DTool
{
	/* List of Feature Of Interest where to add Feature Of Interest.*/
	@GenModel(notify="true", children="false")
	refers FeatureOfInterestList featureOfInterestList
	
	@GenModel(notify="true", children="false", property="Readonly", propertyCategory="PICKED_NODE")
	refers transient Tuple3d pickAbsolutePosition
			
	@GenModel(notify="true", children="false", propertyCategory="PICKED_NODE")
	refers transient Tuple3d pickRelativePosition
	
	@GenModel(notify="true", children="false", propertyCategory="PICKED_NODE")	
	refers transient Node pickedNode
	
	@GenModel(notify="true", children="false", propertyCategory="PICKED_NODE")
	refers transient Tuple3d pickAbsoluteNormal
	
	@GenModel(notify="true", children="false", propertyCategory="PICKED_NODE")
	refers transient Tuple3d pickRelativeNormal	
}

/**
 * A 3D tool used to show the direction and intensity of the Sun.
 */

class SunVector3DTool extends AbstractTwoPoints3DTool
{
	/* The vector color. */
	@GenModel(propertyCategory="SUN_VECTOR_PROPERTIES")
	Color3f vectorColor = "1.0,1.0,0.0"
		
	/* Length of the vector. */
	@GenModel(notify="true", apogy_units = "m", propertyCategory="SUN_VECTOR_PROPERTIES")
	double vectorLength = "10.0"
	
	/* Radius of sphere used as end point to vector. */
	@GenModel(notify="true", apogy_units = "m", propertyCategory="SUN_VECTOR_PROPERTIES")	
	double endPointRadius = "0.01"
	
	/* The current sun intensity. */
	@GenModel(notify="true", apogy_units = "W/m*m", property="Readonly", propertyCategory="SUN_VECTOR_LIGHT_PROPERTIES")	
	double sunIntensity = "0.0"
	
	/* The current day maximum sun intensity. */
	@GenModel(notify="true", apogy_units = "W/m*m", property="Readonly", propertyCategory="SUN_VECTOR_LIGHT_PROPERTIES")	
	double currentDayMaximumSunIntensity = "0.0"
	
	/* The current sun intensity. */
	@GenModel(notify="true", apogy_units = "%", property="Readonly", propertyCategory="SUN_VECTOR_LIGHT_PROPERTIES")	
	double currentSunIntensityPercentage = "0.0"
		
	/* Topology Node associated with the tool. */
	@GenModel(notify="true", children="true", property="Readonly", propertyCategory="SUN_VECTOR_PROPERTIES")	
	refers transient SunVector3DToolNode sunVector3DToolNode opposite sunVector3DTool
	
}

class SunVector3DToolNode extends Node
{	
	refers transient SunVector3DTool sunVector3DTool opposite sunVector3DToolNode	
}

/**
 * A 3D tool used to define trajectories by piking point in the 3D world.
 * The tool support the creation of multiple path.
 */
 
class TrajectoryPickingTool extends Simple3DTool
{	
	/** Offset to apply to the point to keep a wyapoint path above ground. */
	@GenModel(notify="true", apogy_units = "m", propertyCategory="TRAJECTORY_PICKING_TOOL")
	double altitudeOffset = "0"
	
	/** All the  WayPointPath created with this tool.*/
	@GenModel(notify="true", propertyCategory="TRAJECTORY_PICKING_TOOL")
	contains WayPointPath[1..*] paths
	
	/** The WayPointPath to which selected points are to be added. */
	@GenModel(notify="true", propertyCategory="TRAJECTORY_PICKING_TOOL")
	refers WayPointPath[1] activePath
	
	/** The node representing the tool in the topology. */
	@GenModel(notify="true", children="false", property="Readonly", propertyCategory="TRAJECTORY_PICKING_TOOL")
	refers transient TrajectoryPickingToolNode trajectoryPickingToolNode opposite trajectoryPickingTool
	
	/**
	 * Clears all points from the active path. 
	 */
	op void clearActivePath()	
}

/**
  * Node representing the TrajectoryPickingTool in the topology.
  */
class TrajectoryPickingToolNode extends AggregateGroupNode
{
	/** The  TrajectoryPickingTool associated with this node. */
	refers transient TrajectoryPickingTool trajectoryPickingTool opposite trajectoryPickingToolNode
}

/**
 * A 3D tool used to trace the trajectory of a Variable.
 */
 
 class Trajectory3DTool extends Simple3DTool
 {
 	/** Whether of not the trajectory is traced. */
 	@GenModel(propertyCategory="TRAJECTORY_3D_TOOL")
 	boolean penDown = "true"
 	 	 	
 	/* The Apogy System being displayed.*/
 	@GenModel(propertyCategory="TRAJECTORY_3D_TOOL")
	refers Variable[1] variable
		
	/** Minimum distance used to trigger a new point being accepted.*/
	@GenModel(propertyCategory="TRAJECTORY_3D_TOOL", apogy_units="m")
	double distanceThreshold = "0.01"
	
	@GenModel(notify="true", property="Readonly", propertyCategory="TRAJECTORY_3D_TOOL", apogy_units="m")
	double totalDistance = "0.0"
	
	/** The  WayPointPath currently recorded.*/
	contains WayPointPath[0..*] paths 	
	
	/** The pose provide providing pose data. */
	@GenModel(notify="true", children="false", property="Readonly", propertyCategory="TRAJECTORY_3D_TOOL")
	refers transient PoseProvider poseProvider
	
	@GenModel(notify="true", children="false", property="Readonly", propertyCategory="TRAJECTORY_3D_TOOL")
	refers transient Trajectory3DToolNode trajectory3DToolNode opposite trajectory3DTool
 }
 
 /**
  * Node representing the Trajectory3DTool in the topology.
  */
 class Trajectory3DToolNode extends AggregateGroupNode
 {
 	refers transient Trajectory3DTool trajectory3DTool opposite trajectory3DToolNode
 }