/**
 *
 * $Id: ExclusionZonesCostFunctionValidator.java,v 1.1.8.3 2015/09/22 19:39:37 rlarcheveque Exp $
 */
package org.eclipse.symphony.addons.mobility.pathplanners.graph.validation;

import org.eclipse.emf.common.util.EList;
import org.eclipse.symphony.addons.mobility.pathplanners.ExclusionZone;

/**
 * A sample validator interface for {@link org.eclipse.symphony.addons.mobility.pathplanners.graph.ExclusionZonesCostFunction}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ExclusionZonesCostFunctionValidator {
	boolean validate();

	boolean validateExclusionZones(EList<ExclusionZone> value);
}
