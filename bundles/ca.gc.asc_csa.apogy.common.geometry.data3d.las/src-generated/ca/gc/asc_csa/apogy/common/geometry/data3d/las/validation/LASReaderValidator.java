/**
 *
 * $Id$
 */
package ca.gc.asc_csa.apogy.common.geometry.data3d.las.validation;

import ca.gc.asc_csa.apogy.common.geometry.data3d.las.LASHeader;
import ca.gc.asc_csa.apogy.common.geometry.data3d.las.LASPoint;
import ca.gc.asc_csa.apogy.common.geometry.data3d.las.VariableLengthRecord;

import java.io.InputStream;

import org.eclipse.core.runtime.IProgressMonitor;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link ca.gc.asc_csa.apogy.common.geometry.data3d.las.LASReader}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface LASReaderValidator {
	boolean validate();

	boolean validateFile(String value);
	boolean validateInputStream(InputStream value);
	boolean validateVlrs(EList<VariableLengthRecord> value);
	boolean validateProgressMonitor(IProgressMonitor value);
	boolean validateHeader(LASHeader value);
	boolean validatePoints(EList<LASPoint> value);
}
