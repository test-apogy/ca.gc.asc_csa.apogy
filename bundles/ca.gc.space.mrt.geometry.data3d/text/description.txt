Model Data3d

This model description is not a real EMF artifact. It was generated by the
org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's
code generator can be extended.
This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.

Package data3d <http:///ca/gc/space/mrt/geometry/data3d.ecore>

  Class CartesianPolygon -> Polygon
    Attribute /surface : EDouble<<1..1>>
    Attribute /normal : Vector3d<<1..1>>
    Reference /centroid : CartesianPositionCoordinates<<1..1>>

  Class CartesianTriangle -> CartesianPolygon

  Class SphericalPolygon -> Polygon

  Class SphericalTriangle -> SphericalPolygon

  Class CartesianPositionCoordinates -> Coordinates
    Attribute x : EDouble<<1..1>>
    Attribute y : EDouble<<1..1>>
    Attribute z : EDouble<<1..1>>
    Operation asPoint3d() : Point3d

  Class RGBCartesianPositionCoordinates -> CartesianPositionCoordinates
    Attribute red : EByte
    Attribute green : EByte
    Attribute blue : EByte

  Class CartesianOrientationCoordinates -> Coordinates
    Attribute xRotation : EDouble<<1..1>>
    Attribute yRotation : EDouble<<1..1>>
    Attribute zRotation : EDouble<<1..1>>

  Class CartesianCoordinatesSet -> CoordinatesSet

  Class DigitalElevationMap -> CartesianCoordinatesSet
    Attribute xDimension : EInt
    Attribute yDimension : EInt

  Class CartesianCoordinatesMesh -> Mesh, CartesianCoordinatesSet

  Class CartesianTriangularMesh -> Mesh, CartesianCoordinatesSet

  Class SphericalCoordinates -> Coordinates
    Attribute phi : EDouble
    Attribute theta : EDouble
    Attribute r : EDouble

  Class SphericalCoordinatesSet -> CoordinatesSet

  Class SpericalCoordinatesMesh -> Mesh, SphericalCoordinatesSet

  Class SphericalTriangularMesh -> Mesh, SphericalCoordinatesSet

  Class Pose -> CartesianPositionCoordinates, CartesianOrientationCoordinates

  Class SphereSamplingShape -> CoordinatesSamplingShape, PolygonSamplingShape
    Attribute radius : EDouble
    Reference center : CartesianPositionCoordinates
    Attribute includeJustTouching : EBoolean

  Class CartesianCoordinatesSetShapeSampler -> CoordinatesSetShapesSampler

  Class CartesianCoordinatesMeshSampler -> MeshCoordinatesShapesSampler

  Class CartesianCoordinatesMeshPolygonSampler -> MeshPolygonShapesSampler

  Class CartesianTriangularMeshSampler -> MeshCoordinatesShapesSampler

  Class CartesianTriangularMeshPolygonSampler -> MeshPolygonShapesSampler

  Class CartesianPositionCoordinatesMesher -> Processor

  Class Data3dFacade
    Operation createCartesianPositionCoordinates(EDouble, EDouble, EDouble) : CartesianPositionCoordinates
    Operation createCartesianOrientationCoordinates(EDouble, EDouble, EDouble) : CartesianOrientationCoordinates
    Operation createSphericalCoordinates(EDouble, EDouble, EDouble) : SphericalCoordinates
    Operation createPose(EDouble, EDouble, EDouble, EDouble, EDouble, EDouble) : Pose
    Operation createPose(Pose) : Pose
    Operation createPose(CartesianPositionCoordinates, CartesianOrientationCoordinates) : Pose
    Operation createCartesianPolygon(CartesianPositionCoordinates<<1..1>>, CartesianPositionCoordinates<<1..1>>, CartesianPositionCoordinates<<1..1>>) : CartesianPolygon
    Operation createCartesianPositionCoordinates(CartesianPositionCoordinates) : CartesianPositionCoordinates
    Operation createCartesianOrientationCoordinates(CartesianOrientationCoordinates) : CartesianOrientationCoordinates
    Operation createCartesianCoordinatesMesh(CartesianCoordinatesMesh) : CartesianCoordinatesMesh
    Operation createCartesianTriangle(CartesianPositionCoordinates<<1..1>>, CartesianPositionCoordinates<<1..1>>, CartesianPositionCoordinates<<1..1>>) : CartesianTriangle
    Operation createCartesianTriangle(CartesianPolygon) : CartesianTriangle
    Operation applyTransform(CartesianCoordinatesSet, Matrix4d) : CartesianCoordinatesSet
    Operation createCartesianCoordinatesMesh(List) : CartesianCoordinatesMesh
    Operation createCartesianTriangularMesh(List) : CartesianTriangularMesh
    Operation applyTransform(List, Matrix4d) : List
    Operation applyTransform(CartesianTriangularMesh, Matrix4d) : CartesianTriangularMesh
    Operation applyTransformInt(CartesianTriangularMesh, Matrix4d) : CartesianTriangularMesh
    Operation applyTransform(NormalPointCloud, Matrix4d) : NormalPointCloud
    Operation createCartesianCoordinatesMesh(CartesianTriangularMesh) : CartesianCoordinatesMesh<<1..1>>
    Operation createCartesianTriangularMesh(CartesianTriangularMesh) : CartesianTriangularMesh
    Operation updateCartesianCoordinatesSet(CartesianCoordinatesSet, DoubleArrayOfArray) : void
    Operation createPointNormalLocator(NormalPointCloud) : PointNormalLocator
    Operation createDigitalElevationMap(CartesianCoordinatesSet) : DigitalElevationMap
    Operation concatenateTriangularMeshes(CartesianTriangularMesh<<1..*>>) : CartesianTriangularMesh

  Class Data3DIO
    Operation saveTriangularMesh(CartesianTriangularMesh, EString) : void
    Operation loadTriangularMesh(EString) : CartesianTriangularMesh
    Operation saveTriangularMesh(CartesianTriangularMesh, OutputStream) : void
    Operation loadTriangularMesh(InputStream) : CartesianTriangularMesh
    Operation loadTriangularMeshFromASCIIAsNormalPointCloud(EString) : NormalPointCloud
    Operation loadTriangularMeshFromASCII(EString) : CartesianTriangularMesh
    Operation saveTriangularMeshAsASCII(CartesianTriangularMesh, EString) : void
    Operation loadXYZ(EString) : CartesianCoordinatesSet
    Operation loadTriangularMeshFromTriXYZ(EString, EString) : CartesianTriangularMesh
    Operation saveCoordinatesSetToXYZ(CartesianCoordinatesSet, EString) : void
    Operation saveCoordinatesSetToXYZ(CartesianCoordinatesSet, OutputStream) : void
    Operation saveCoordinatesSetToCSV(CartesianCoordinatesSet, OutputStream) : void
    Operation saveCoordinatesSetToCSV(CartesianCoordinatesSet, EString) : void

  Class PointLocator
    Attribute points : List
    Operation findClosestPoint(CartesianPositionCoordinates) : CartesianPositionCoordinates
    Operation findPointsWithinRadius(EDouble, CartesianPositionCoordinates) : CartesianPositionCoordinates<<0..*>>

  Class Data3DUtils
    Operation computeNormals(CartesianTriangularMesh) : Vector3d<<0..*>>
    Operation computeCentroid(CartesianCoordinatesSet) : CartesianPositionCoordinates
    Operation computeMinMaxValues(Point3d, Point3d, CartesianCoordinatesSet) : void
    Operation computeCurvatureChange(PointLocator, EInt, EDouble) : EDouble
    Operation computeCurvatureChange(VecmathPointLocator, EInt, EDouble) : EDouble
    Operation extrude(List, CartesianAxis, EDouble, EBoolean) : CartesianTriangularMesh

  Class NormalPointCloud
    Attribute points : List
    Attribute normals : List

  Class VecmathPointLocator
    Attribute points : List
    Operation findClosestPoint(Point3d) : Point3d
    Operation findPointsWithinRadius(EDouble, Point3d) : Point3d<<0..*>>
    Operation findClosestPointId(Point3d) : EInt
    Operation findPointIdsWithinRadius(EDouble, Point3d) : IntArray
    Operation findClosestNPoints(Point3d, EInt) : Point3d<<0..*>>
    Operation findClosestNPointIds(Point3d, EInt) : IntArray

  Class VecmathKdTreePointLocator -> VecmathPointLocator

  Class MeshLocaliser
    Operation localise(CartesianTriangularMesh, Matrix4d, CartesianTriangularMesh, Matrix4d) : Matrix4d

  Class PointNormalLocator
    Reference dataSet : NormalPointCloud
    Operation findClosestPoint(Point3d, Vector3d) : GVector
    Operation findPointsWithinRadius(EDouble, Point3d, Vector3d) : GVector<<0..*>>
    Operation findClosestNPoints(EInt, Point3d, Vector3d) : GVector<<0..*>>
    Operation findClosestPointId(Point3d, Vector3d) : EInt
    Operation findPointIdsWithinRadius(EDouble, Point3d, Vector3d) : IntArray
    Operation findClosestNPointIds(EInt, Point3d, Vector3d) : IntArray

  Class DelaunayMesher -> CartesianPositionCoordinatesMesher
    Attribute tolerance : EDouble
    Attribute alpha : EDouble
    Attribute offset : EDouble
    Attribute boundingTriangulation : EBoolean
    Attribute meshingPlane : MESHING_PLANE

  Class DigitalElevationMapMesher -> Processor

  Class DigitalElevationMapSampler -> Processor
    Attribute targetResolution : EDouble

  Class TriangularMeshNormalsCalculator -> Processor

  Class TriangularMesh2NormalPointCloud -> Processor

  Class PointsRangeGager -> Processor
    Attribute minX : EDouble
    Attribute maxX : EDouble
    Attribute minY : EDouble
    Attribute maxY : EDouble
    Attribute minZ : EDouble
    Attribute maxZ : EDouble

  Class UniquePointsFilter -> Processor

  Class TriangleEdgeLenghtTriangularMeshFilter
    Attribute minimumRange : EDouble
    Attribute maximumRange : EDouble
    Attribute maximumEdgeLenght : EDouble
    Operation filter(CartesianTriangularMesh) : CartesianTriangularMesh

  Class OutlierFilter -> Processor
    Attribute maxDistance : EDouble

  Class RasterPointCloud
    Attribute rows : EInt
    Attribute columns : EInt
    Operation getPoint(EInt, EInt) : CartesianPositionCoordinates
    Operation setPoint(EInt, EInt, CartesianPositionCoordinates) : void

  Class RasterPointCloudToCartesianCoordinatesSet -> Processor

  Class MeshSmoother -> Processor
    Attribute numberOfIterations : EInt

  Class VoxelBased3DPointCloudResampler -> Processor
    Attribute resolutionX : EDouble
    Attribute resolutionY : EDouble
    Attribute resolutionZ : EDouble
    Attribute minimumNumberOfPointPerVoxel : EInt
    Attribute tileResolution : EDouble

  Class RigidBodyPoseTracker
    Reference /positionMarkersAtOrigin : PositionMarker<<0..*>>
    Operation computeTransformation(PositionMarker<<0..*>>) : Point3d
    Operation addPositionMarkers(List<<1..1>>) : void
    Operation removePositionMarkers(List<<1..1>>) : void

  Class PositionMarker -> CartesianPositionCoordinates
    Attribute identifier : EString

  Enum CartesianAxis
    Literal X = 0
    Literal Y = 1
    Literal Z = 2

  Enum CartesianPlane
    Literal XY = 0
    Literal XZ = 1
    Literal YZ = 2

  Enum MESHING_PLANE
    Literal XY = 0
    Literal YZ = 1
    Literal XZ = 2

  DataType InputStream <java.io.InputStream>

  DataType IOException <java.io.IOException>

  DataType OutputStream <java.io.OutputStream>

  DataType Matrix4d <javax.vecmath.Matrix4d>

  DataType Vector3d <javax.vecmath.Vector3d>

  DataType Point3d <javax.vecmath.Point3d>

  DataType DoubleArrayOfArray <double[][]>

  DataType IntArray <int[]>

  DataType List <java.util.List>

  DataType GVector <javax.vecmath.GVector>
