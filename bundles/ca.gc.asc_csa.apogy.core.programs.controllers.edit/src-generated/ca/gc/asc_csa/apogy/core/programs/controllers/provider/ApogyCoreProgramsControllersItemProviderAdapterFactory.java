/**
 * Canadian Space Agency / Agence spatiale canadienne 2012 Copyrights (c)
 */
package ca.gc.asc_csa.apogy.core.programs.controllers.provider;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.command.CommandParameter;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import ca.gc.asc_csa.apogy.core.invocator.ArgumentsList;
import ca.gc.asc_csa.apogy.core.invocator.ApogyCoreInvocatorPackage;
import ca.gc.asc_csa.apogy.core.invocator.OperationCallContainer;
import ca.gc.asc_csa.apogy.core.invocator.ProgramsList;
import ca.gc.asc_csa.apogy.core.invocator.util.ApogyCoreInvocatorSwitch;
import ca.gc.asc_csa.apogy.core.programs.controllers.ApogyCoreProgramsControllersFactory;
import ca.gc.asc_csa.apogy.core.programs.controllers.ApogyCoreProgramsControllersPackage;
import ca.gc.asc_csa.apogy.core.programs.controllers.util.ApogyCoreProgramsControllersAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ApogyCoreProgramsControllersItemProviderAdapterFactory extends ApogyCoreProgramsControllersAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender
{
  /**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ComposedAdapterFactory parentAdapterFactory;

  /**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected IChangeNotifier changeNotifier = new ChangeNotifier();

  /**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(ApogyCoreProgramsControllersEditPlugin.INSTANCE, ApogyCoreProgramsControllersPackage.eNS_URI);

  /**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected Collection<Object> supportedTypes = new ArrayList<Object>();

  /**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public ApogyCoreProgramsControllersItemProviderAdapterFactory()
  {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

  /**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.ApogyCoreProgramsControllersFacade} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApogyCoreProgramsControllersFacadeItemProvider apogyCoreProgramsControllersFacadeItemProvider;

		/**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.ControllersConfiguration} instances.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ControllersConfigurationItemProvider controllersConfigurationItemProvider;

  /**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.ControllersConfiguration}.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Adapter createControllersConfigurationAdapter()
  {
		if (controllersConfigurationItemProvider == null) {
			controllersConfigurationItemProvider = new ControllersConfigurationItemProvider(this);
		}

		return controllersConfigurationItemProvider;
	}

  /**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.OperationCallControllerBinding} instances.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected OperationCallControllerBindingItemProvider operationCallControllerBindingItemProvider;

  /**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.OperationCallControllerBinding}.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Adapter createOperationCallControllerBindingAdapter()
  {
		if (operationCallControllerBindingItemProvider == null) {
			operationCallControllerBindingItemProvider = new OperationCallControllerBindingItemProvider(this);
		}

		return operationCallControllerBindingItemProvider;
	}

  /**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.TimeTrigger} instances.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected TimeTriggerItemProvider timeTriggerItemProvider;

  /**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.TimeTrigger}.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Adapter createTimeTriggerAdapter()
  {
		if (timeTriggerItemProvider == null) {
			timeTriggerItemProvider = new TimeTriggerItemProvider(this);
		}

		return timeTriggerItemProvider;
	}

  /**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.ControllerEdgeTrigger} instances.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ControllerEdgeTriggerItemProvider controllerEdgeTriggerItemProvider;

  /**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.ControllerEdgeTrigger}.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Adapter createControllerEdgeTriggerAdapter()
  {
		if (controllerEdgeTriggerItemProvider == null) {
			controllerEdgeTriggerItemProvider = new ControllerEdgeTriggerItemProvider(this);
		}

		return controllerEdgeTriggerItemProvider;
	}

  /**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.ControllerStateTrigger} instances.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ControllerStateTriggerItemProvider controllerStateTriggerItemProvider;

  /**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.ControllerStateTrigger}.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Adapter createControllerStateTriggerAdapter()
  {
		if (controllerStateTriggerItemProvider == null) {
			controllerStateTriggerItemProvider = new ControllerStateTriggerItemProvider(this);
		}

		return controllerStateTriggerItemProvider;
	}

  /**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.BindedEDataTypeArgument} instances.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected BindedEDataTypeArgumentItemProvider bindedEDataTypeArgumentItemProvider;

  /**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.BindedEDataTypeArgument}.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Adapter createBindedEDataTypeArgumentAdapter()
  {
		if (bindedEDataTypeArgumentItemProvider == null) {
			bindedEDataTypeArgumentItemProvider = new BindedEDataTypeArgumentItemProvider(this);
		}

		return bindedEDataTypeArgumentItemProvider;
	}

  /**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.FixedValueSource} instances.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected FixedValueSourceItemProvider fixedValueSourceItemProvider;

  /**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.FixedValueSource}.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Adapter createFixedValueSourceAdapter()
  {
		if (fixedValueSourceItemProvider == null) {
			fixedValueSourceItemProvider = new FixedValueSourceItemProvider(this);
		}

		return fixedValueSourceItemProvider;
	}

  /**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.ControllerValueSource} instances.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ControllerValueSourceItemProvider controllerValueSourceItemProvider;

  /**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.ControllerValueSource}.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Adapter createControllerValueSourceAdapter()
  {
		if (controllerValueSourceItemProvider == null) {
			controllerValueSourceItemProvider = new ControllerValueSourceItemProvider(this);
		}

		return controllerValueSourceItemProvider;
	}

  /**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.LinearInputConditioning} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinearInputConditioningItemProvider linearInputConditioningItemProvider;

		/**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.LinearInputConditioning}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinearInputConditioningAdapter() {
		if (linearInputConditioningItemProvider == null) {
			linearInputConditioningItemProvider = new LinearInputConditioningItemProvider(this);
		}

		return linearInputConditioningItemProvider;
	}

		/**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.CenteredLinearInputConditioning} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CenteredLinearInputConditioningItemProvider centeredLinearInputConditioningItemProvider;

		/**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.CenteredLinearInputConditioning}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCenteredLinearInputConditioningAdapter() {
		if (centeredLinearInputConditioningItemProvider == null) {
			centeredLinearInputConditioningItemProvider = new CenteredLinearInputConditioningItemProvider(this);
		}

		return centeredLinearInputConditioningItemProvider;
	}

		/**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.ParabolicInputConditioning} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParabolicInputConditioningItemProvider parabolicInputConditioningItemProvider;

		/**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.ParabolicInputConditioning}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParabolicInputConditioningAdapter() {
		if (parabolicInputConditioningItemProvider == null) {
			parabolicInputConditioningItemProvider = new ParabolicInputConditioningItemProvider(this);
		}

		return parabolicInputConditioningItemProvider;
	}

		/**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.CenteredParabolicInputConditioning} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CenteredParabolicInputConditioningItemProvider centeredParabolicInputConditioningItemProvider;

		/**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.CenteredParabolicInputConditioning}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCenteredParabolicInputConditioningAdapter() {
		if (centeredParabolicInputConditioningItemProvider == null) {
			centeredParabolicInputConditioningItemProvider = new CenteredParabolicInputConditioningItemProvider(this);
		}

		return centeredParabolicInputConditioningItemProvider;
	}

		/**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.ToggleValueSource} instances.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ToggleValueSourceItemProvider toggleValueSourceItemProvider;

  /**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.ToggleValueSource}.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Adapter createToggleValueSourceAdapter()
  {
		if (toggleValueSourceItemProvider == null) {
			toggleValueSourceItemProvider = new ToggleValueSourceItemProvider(this);
		}

		return toggleValueSourceItemProvider;
	}

  /**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.UserDefinedInputConditioning} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UserDefinedInputConditioningItemProvider userDefinedInputConditioningItemProvider;

		/**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.UserDefinedInputConditioning}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUserDefinedInputConditioningAdapter() {
		if (userDefinedInputConditioningItemProvider == null) {
			userDefinedInputConditioningItemProvider = new UserDefinedInputConditioningItemProvider(this);
		}

		return userDefinedInputConditioningItemProvider;
	}

		/**
	 * This keeps track of the one adapter used for all {@link ca.gc.asc_csa.apogy.core.programs.controllers.CustomInputConditioningPoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomInputConditioningPointItemProvider customInputConditioningPointItemProvider;

		/**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.CustomInputConditioningPoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomInputConditioningPointAdapter() {
		if (customInputConditioningPointItemProvider == null) {
			customInputConditioningPointItemProvider = new CustomInputConditioningPointItemProvider(this);
		}

		return customInputConditioningPointItemProvider;
	}

		/**
	 * This creates an adapter for a {@link ca.gc.asc_csa.apogy.core.programs.controllers.ApogyCoreProgramsControllersFacade}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApogyCoreProgramsControllersFacadeAdapter() {
		if (apogyCoreProgramsControllersFacadeItemProvider == null) {
			apogyCoreProgramsControllersFacadeItemProvider = new ApogyCoreProgramsControllersFacadeItemProvider(this);
		}

		return apogyCoreProgramsControllersFacadeItemProvider;
	}

		/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public ComposeableAdapterFactory getRootAdapterFactory()
  {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

  /**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory)
  {
		this.parentAdapterFactory = parentAdapterFactory;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean isFactoryForType(Object type)
  {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

  /**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Adapter adapt(Notifier notifier, Object type)
  {
		return super.adapt(notifier, this);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object adapt(Object object, Object type)
  {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public List<IChildCreationExtender> getChildCreationExtenders()
  {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain)
  {
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public ResourceLocator getResourceLocator()
  {
		return childCreationExtenderManager;
	}

  /**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public void addListener(INotifyChangedListener notifyChangedListener)
  {
		changeNotifier.addListener(notifyChangedListener);
	}

  /**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public void removeListener(INotifyChangedListener notifyChangedListener)
  {
		changeNotifier.removeListener(notifyChangedListener);
	}

  /**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public void fireNotifyChanged(Notification notification)
  {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

  /**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public void dispose()
  {
		if (apogyCoreProgramsControllersFacadeItemProvider != null) apogyCoreProgramsControllersFacadeItemProvider.dispose();
		if (controllersConfigurationItemProvider != null) controllersConfigurationItemProvider.dispose();
		if (operationCallControllerBindingItemProvider != null) operationCallControllerBindingItemProvider.dispose();
		if (timeTriggerItemProvider != null) timeTriggerItemProvider.dispose();
		if (controllerEdgeTriggerItemProvider != null) controllerEdgeTriggerItemProvider.dispose();
		if (controllerStateTriggerItemProvider != null) controllerStateTriggerItemProvider.dispose();
		if (bindedEDataTypeArgumentItemProvider != null) bindedEDataTypeArgumentItemProvider.dispose();
		if (fixedValueSourceItemProvider != null) fixedValueSourceItemProvider.dispose();
		if (toggleValueSourceItemProvider != null) toggleValueSourceItemProvider.dispose();
		if (controllerValueSourceItemProvider != null) controllerValueSourceItemProvider.dispose();
		if (linearInputConditioningItemProvider != null) linearInputConditioningItemProvider.dispose();
		if (centeredLinearInputConditioningItemProvider != null) centeredLinearInputConditioningItemProvider.dispose();
		if (parabolicInputConditioningItemProvider != null) parabolicInputConditioningItemProvider.dispose();
		if (centeredParabolicInputConditioningItemProvider != null) centeredParabolicInputConditioningItemProvider.dispose();
		if (userDefinedInputConditioningItemProvider != null) userDefinedInputConditioningItemProvider.dispose();
		if (customInputConditioningPointItemProvider != null) customInputConditioningPointItemProvider.dispose();
	}

  /**
	 * A child creation extender for the {@link ApogyCoreInvocatorPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class ApogyCoreInvocatorChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends ApogyCoreInvocatorSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseProgramsList(ProgramsList object) {
				newChildDescriptors.add
					(createChildParameter
						(ApogyCoreInvocatorPackage.Literals.PROGRAMS_LIST__PROGRAMS,
						 ApogyCoreProgramsControllersFactory.eINSTANCE.createControllersConfiguration()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseOperationCallContainer(OperationCallContainer object) {
				newChildDescriptors.add
					(createChildParameter
						(ApogyCoreInvocatorPackage.Literals.OPERATION_CALL_CONTAINER__OPERATION_CALLS,
						 ApogyCoreProgramsControllersFactory.eINSTANCE.createOperationCallControllerBinding()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseArgumentsList(ArgumentsList object) {
				newChildDescriptors.add
					(createChildParameter
						(ApogyCoreInvocatorPackage.Literals.ARGUMENTS_LIST__ARGUMENTS,
						 ApogyCoreProgramsControllersFactory.eINSTANCE.createBindedEDataTypeArgument()));

				newChildDescriptors.add
					(createChildParameter
						(ApogyCoreInvocatorPackage.Literals.ARGUMENTS_LIST__ARGUMENTS,
						 ApogyCoreProgramsControllersFactory.eINSTANCE.createFixedValueSource()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return ApogyCoreProgramsControllersEditPlugin.INSTANCE;
		}
	}

}
