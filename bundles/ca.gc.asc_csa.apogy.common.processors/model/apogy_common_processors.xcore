/*
 * Copyright (c) 2016 Canadian Space Agency (CSA) / Agence spatiale canadienne (ASC).
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Pierre Allard (Pierre.Allard@canada.ca), 
 *     Regent L'Archeveque (Regent.Larcheveque@canada.ca),
 *     Sebastien Gemme (Sebastien.Gemme@canada.ca),
 *     Canadian Space Agency (CSA) - Initial API and implementation
 */
@GenModel(prefix="ApogyCommonProcessors",
	      childCreationExtenders="true",
	      extensibleProviderFactory="true",
	      multipleEditorPages="false",
	      copyrightText="Canadian Space Agency / Agence spatiale canadienne 2015 Copyrights (c)",
	      modelName="ApogyCommonProcessors",
	      suppressGenModelAnnotations="false")
@GenModel(modelDirectory="/ca.gc.asc_csa.apogy.common.processors/src-generated")
@GenModel(editDirectory="/ca.gc.asc_csa.apogy.common.processors.edit/src-generated")

package ca.gc.asc_csa.apogy.common.processors

type IProgressMonitor wraps org.eclipse.core.runtime.IProgressMonitor
type Exception wraps Exception

interface VerboseProvider
{
	boolean verbose

	op void printVerbose(String message)
}

interface Monitorable
{
	@GenModel(property="None")
	transient IProgressMonitor progressMonitor
}

/*
 * Defines an object that can process an input to get an output.
 */
abstract class Processor<I , O> extends Monitorable
{
	transient I input

	transient O output

	op O process(I input) throws Exception
}

class ProcessorsChain<I , O> extends Processor < I , O >
{
	Object intermediateResult

	refers Processor < ? , ? >[1] runningProcessor

	refers Processor < ? , ? >[] processors
}

class JobProcessorsChain<I , O> extends ProcessorsChain < I , O >
{

}
