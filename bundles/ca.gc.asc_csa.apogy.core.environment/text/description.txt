Model ApogyCoreEnvironment

This model description is not a real EMF artifact. It was generated by the
org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's
code generator can be extended.
This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.

Package environment <ca.gc.asc_csa.apogy.core.environment>

  Class Worksite -> AbstractWorksite
    Reference /worksiteNode : WorksiteNode
    Reference environment : Environment

  Class SurfaceWorksite -> Worksite
    Reference sky : Sky<<1..1>>
    Reference mapsList : MapsList<<1..1>>

  Class EarthSurfaceWorksite -> SurfaceWorksite
    Reference geographicalCoordinates : GeographicCoordinates<<1..1>>
    Attribute xAxisAzimuth : EDouble
    Reference /earthSky : EarthSky<<1..1>>
    Operation convertToGeographicCoordinates(Tuple3d) : GeographicCoordinates
    Operation convertToXYZPosition(GeographicCoordinates) : Tuple3d

  Class Environment -> Named, Described

  Class SurfaceEnvironment -> Environment
    Reference atmosphere : Atmosphere
    Reference gravity : Tuple3d

  Class EarthSurfaceEnvironment -> SurfaceEnvironment

  Class Atmosphere
    Attribute windSpeed : EDouble
    Attribute windDirection : EDouble
    Attribute temperature : EDouble
    Attribute surfacePressure : EDouble
    Attribute surfaceDensity : EDouble

  Class AtmosphereUtils
    Operation getAirMass(EDouble) : EDouble
    Operation getDirectSunIntensity(EDouble, EDouble) : EDouble
    Operation getDiffuseSunIntensity(EDouble, EDouble) : EDouble
    Operation getAtmosphereRefractionCorrection(EDouble) : EDouble

  Class EquatorialCoordinates
    Attribute rightAscension : EDouble
    Attribute declination : EDouble
    Attribute radius : EDouble

  Class GeographicCoordinates
    Attribute longitude : EDouble
    Attribute latitude : EDouble
    Attribute elevation : EDouble

  Class HorizontalCoordinates
    Attribute altitude : EDouble
    Attribute azimuth : EDouble
    Attribute radius : EDouble

  Class EclipticCoordinates
    Attribute longitude : EDouble
    Attribute latitude : EDouble
    Attribute radius : EDouble

  Class Sky -> Timed
    Reference surfaceWorksite : SurfaceWorksite
    Reference /skyNode : SkyNode<<1..1>>
    Reference /sun : Sun
    Reference /sunHorizontalCoordinates : HorizontalCoordinates
    Reference /starField : StarField
    Operation getSunAngularDiameter() : EDouble

  Class EarthSky -> Sky
    Reference /moon : Moon
    Reference /moonHorizontalCoordinates : HorizontalCoordinates
    Operation getMoonAngularDiameter() : EDouble

  Class Sun -> GroupNode
    Attribute radius : EDouble
    Operation getIrradiance(EDouble) : EDouble

  Class Earth -> GroupNode
    Attribute radius : EDouble

  Class Moon -> GroupNode
    Attribute radius : EDouble

  Class EnvironmentUtilities
    Operation convertToJulianDate(Date) : EDouble
    Operation parseRightAscension(EString) : EFloat
    Operation parseDegMinSec(EString) : EFloat
    Operation sortByMagnitude(List) : SortedSet

  Class ApogyCoreEnvironmentFacade
    Operation createAndInitializeStars() : StarField
    Operation createAndInitializeDefaultCSAWorksite() : EarthSurfaceWorksite
    Operation initializeSkyNode(Sky, SkyNode) : void
    Operation initializeEarthSkyNode(EarthSky, EarthSkyNode) : void
    Operation getMarsYardGeographicalCoordinates() : GeographicCoordinates
    Operation createStar(EFloat, EDouble, EDouble) : Star
    Operation getMarsYardTransformNode() : TransformNode
    Operation createAndInitializeEarthSurfaceEnvironment() : EarthSurfaceEnvironment
    Operation createAndInitializeEarthAtmosphere() : Atmosphere
    Operation getSunVector(ApogySystem, EString, Environment) : Tuple3d
    Operation getSunVector(Node, Environment) : Tuple3d
    Operation getMoonVector(ApogySystem, EString, Environment) : Tuple3d
    Operation getMoonVector(Node, Environment) : Tuple3d
    Operation getVector(Node, ApogySystem, ConnectionPoint, Environment) : Tuple3d
    Operation getVector(ApogySystem, EString, ApogySystem, ConnectionPoint, Environment) : Tuple3d
    Operation getVector(ApogySystem, EString, ApogySystem, EString, Environment) : Tuple3d
    Operation getVector(ApogySystem, EString, EString, EString, Environment) : Tuple3d
    Operation createEImage(List) : AbstractEImage
    Operation getAbsoluteRectangularRegionCorners(RectangularRegion) : List
    Operation getBestResolutionRectangularRegionImage(List) : RectangularRegionImage
    Operation getRectangularRegionExtent(RectangularRegionProvider, Tuple3d, Tuple3d) : void
    Operation getRectangularRegionImageExtent(RectangularRegionImage, Tuple3d, Tuple3d) : void
    Operation getRectangularRegionExtent(List, Tuple3d, Tuple3d) : void
    Operation getRectangularRegionImageExtent(List, Tuple3d, Tuple3d) : void
    Operation fitsInside(RectangularRegion, RectangularRegion) : EBoolean
    Operation intersects(RectangularRegion, RectangularRegion, Matrix4x4) : EBoolean
    Operation getImageMapLayerPresentationExtent(ImageMapLayerPresentation, Tuple3d, Tuple3d) : void
    Operation getImageMapLayerPresentationExtent(List, Tuple3d, Tuple3d) : void
    Operation getImageMapLayerPresentationImage(List) : AbstractEImage
    Operation getBestResolutionMapLayer(List) : ImageMapLayerPresentation
    Operation getVisibleImageMapLayerPresentation(List) : List
    Operation getRectangularVolumeRegion(CartesianTriangularMesh) : RectangularVolumeRegion

  Class Star
    Attribute magnitude : EFloat
    Reference equatorialCoordinates : EquatorialCoordinates

  Class StarField -> Node
    Reference stars : Star<<0..*>>
    Attribute starFieldFileName : EString

  Class AstronomyUtils
    Operation getSunEquatorialPosition(EDouble) : EquatorialCoordinates
    Operation getHorizontalSunPosition(Date, EDouble, EDouble) : HorizontalCoordinates
    Operation getMoonEquatorialPosition(EDouble) : EquatorialCoordinates
    Operation getMoonTopocentricEquatorialPosition(Date, EDouble, EDouble) : EquatorialCoordinates
    Operation getHorizontalMoonPosition(Date, EDouble, EDouble) : HorizontalCoordinates
    Operation getTimeSinceJ2000(EDouble) : EDouble
    Operation getLocalSideralTime(Date, EDouble) : EDouble
    Operation getUTCDecimalHours(Date) : EDouble
    Operation convertToHorizontalCoordinates(EquatorialCoordinates, EDouble, EDouble, Date) : HorizontalCoordinates
    Operation convertTimeToAngle(EInt, EInt, EInt) : EDouble
    Operation clampAngleToZero2PI(EDouble) : EDouble
    Operation convertToEquatorialCoordinates(EclipticCoordinates) : EquatorialCoordinates
    Operation convertToEclipticCoordinates(EquatorialCoordinates) : EclipticCoordinates
    Operation convertFromEquatorialRectangularToEclipticRectangular(Point3d) : Point3d
    Operation convertFromEclipticRectangularToEquatorialRectangular(Point3d) : Point3d
    Operation convertFromEclipticRectangularToEclipticCoordinates(Point3d) : EclipticCoordinates
    Operation convertFromEquatorialRectangularToEquatorialCoordinates(Point3d) : EquatorialCoordinates
    Operation convertFromHorizontalCoordinatesToHorizontalRectangular(HorizontalCoordinates) : Point3d
    Operation convertFromEquatorialCoordinatesToEquatorialRectangular(EquatorialCoordinates) : Point3d
    Operation convertAUtoMeters(EDouble) : EDouble
    Operation getMaximumSunAltitude(EDouble) : EDouble
    Operation convertToHHmmssString(EDouble) : EString
    Operation getSunRiseTime(Date, EDouble, EDouble) : Date
    Operation getSunSetTime(Date, EDouble, EDouble) : Date
    Operation getSunHighestElevationTime(Date, EDouble, EDouble) : Date

  Class Map -> Named, Described
    Reference transformation : Matrix4x4
    Reference layers : AbstractMapLayer<<0..*>>
    Reference /mapNode : MapNode<<1..1>>

  Class MapsList
    Reference maps : Map<<0..*>>
    Reference /mapsListNode : MapsListNode<<1..1>>

  Class AbstractMapLayer -> Named, Described
    Reference map : Map
    Reference /abstractMapLayerNode : AbstractMapLayerNode

  Class MapLayerPresentation -> Named, Described
    Attribute visible : EBoolean
    Reference mapLayer : AbstractMapLayer

  Class URLMapLayer -> AbstractMapLayer
    Attribute url : EString

  Class Region
    Reference transformation : Matrix4x4

  Class RectangularRegion -> Region
    Attribute xMin : EDouble
    Attribute xMax : EDouble
    Attribute yMin : EDouble
    Attribute yMax : EDouble
    Attribute /xDimension : EDouble
    Attribute /yDimension : EDouble
    Reference /lowerLeftCorner : Tuple3d<<1..1>>
    Reference /upperLeftCorner : Tuple3d<<1..1>>
    Reference /lowerRightCorner : Tuple3d<<1..1>>
    Reference /upperRightCorner : Tuple3d<<1..1>>

  Class RectangularVolumeRegion -> RectangularRegion
    Attribute zMin : EDouble
    Attribute zMax : EDouble
    Attribute /zDimension : EDouble

  Class RectangularRegionProvider
    Operation getRegion() : RectangularRegion

  Class RectangularRegionImage -> RectangularRegionProvider
    Operation getRegionImage() : AbstractEImage
    Operation getResolution() : EDouble

  Class ImageMapLayer -> AbstractMapLayer, RectangularRegionImage
    Attribute width : EDouble
    Attribute height : EDouble
    Attribute opaque : EBoolean
    Reference image : AbstractEImage<<1..1>>
    Reference legend : AbstractEImage
    Attribute /resolution : EDouble
    Operation updateImage(IProgressMonitor) : void
    Operation getImageMapLayerRegion() : RectangularRegion

  Class ImageMapLayerPresentation -> MapLayerPresentation, RectangularRegionImage
    Attribute alpha : EFloat
    Operation getImageMapLayer() : ImageMapLayer

  Class URLImageMapLayer -> ImageMapLayer, URLMapLayer
    Attribute legendURL : EString

  Class TopologyTreeMapLayer -> AbstractMapLayer
    Reference topologyTreeRoot : TopologyTreeMapLayerNode

  Class TopologyTreeMapLayerNode -> AggregateGroupNode
    Reference topologyTreeMapLayer : TopologyTreeMapLayer
    Reference transientParent : Node

  Class CartesianTriangularMeshMapLayer -> AbstractMapLayer
    Attribute meshIsDirty : EBoolean
    Reference mapLayerPresentations : MapLayerPresentation<<0..*>>
    Reference textureImage : AbstractEImage
    Reference cartesianTriangularMeshMapLayerNode : CartesianTriangularMeshMapLayerNode
    Operation getCurrentMesh() : CartesianTriangularMesh
    Operation forceUpdateTextureImage() : void

  Class CartesianTriangularMeshDerivedImageMapLayer -> ImageMapLayer
    Attribute requiredResolution : EDouble
    Reference cartesianTriangularMeshMapLayer : CartesianTriangularMeshMapLayer

  Class CartesianTriangularMeshSlopeImageMapLayer -> CartesianTriangularMeshDerivedImageMapLayer
    Attribute autoScale : EBoolean
    Attribute minimumSlope : EDouble
    Attribute maximumSlope : EDouble

  Class CartesianTriangularMeshDiscreteSlopeImageMapLayer -> CartesianTriangularMeshSlopeImageMapLayer
    Reference slopeRanges : SlopeRange<<0..*>>

  Class CartesianTriangularMeshHeightImageMapLayer -> CartesianTriangularMeshDerivedImageMapLayer
    Attribute autoScale : EBoolean
    Attribute minimumHeight : EDouble
    Attribute maximumHeight : EDouble

  Class SlopeRange -> Named, Described
    Attribute slopeLowerBound : EDouble
    Attribute slopeUpperBound : EDouble
    Attribute color : Color3f

  Class LineOfSightImageMapLayer -> CartesianTriangularMeshDerivedImageMapLayer
    Attribute lineOfSightAvailableColor : Color3f
    Attribute lineOfSightNotAvailableColor : Color3f
    Reference observerPose : Matrix4x4<<1..1>>
    Attribute targetHeightAboveGround : EDouble
    Attribute useHeightPerpendicularToGround : EBoolean

  Class AbstractShapeImageLayer -> ImageMapLayer
    Attribute shapedFilled : EBoolean
    Attribute color : Color3f
    Attribute requiredResolution : EDouble

  Class EllipseShapeImageLayer -> AbstractShapeImageLayer
    Attribute ellipseWidth : EDouble
    Attribute ellipseHeight : EDouble
    Attribute showCenterLines : EBoolean

  Class RectangleShapeImageLayer -> AbstractShapeImageLayer
    Attribute rectangleWidth : EDouble
    Attribute rectangleHeight : EDouble
    Attribute showCenterLines : EBoolean

  Class PolygonShapeImageMapLayer -> AbstractShapeImageLayer
    Operation getVertices() : List

  Class CartesianCoordinatesPolygonShapeImageMapLayer -> PolygonShapeImageMapLayer
    Reference polygonVertices : Tuple3d<<0..*>>

  Class GeographicCoordinatesPolygonShapeImageMapLayer -> PolygonShapeImageMapLayer
    Reference polygonVerticesGeographicCoordinates : GeographicCoordinates<<0..*>>

  Class BasicCartesianTriangularMeshMapLayer -> CartesianTriangularMeshMapLayer
    Reference mesh : CartesianTriangularMesh

  Class CartesianTriangularMeshURLMapLayer -> CartesianTriangularMeshMapLayer, URLMapLayer
    Reference mesh : CartesianTriangularMesh

  Class FeaturesOfInterestMapLayer -> AbstractMapLayer, RectangularRegionProvider
    Reference features : FeatureOfInterestList<<1..1>>

  Class WorksiteNode -> AggregateGroupNode
    Reference worksite : Worksite

  Class SurfaceWorksiteNode -> WorksiteNode

  Class EarthSurfaceWorksiteNode -> SurfaceWorksiteNode
    Reference skyTransformNode : TransformNode

  Class MapsListNode -> AggregateGroupNode
    Reference mapsList : MapsList

  Class MapNode -> TransformNode
    Reference map : Map

  Class AbstractMapLayerNode -> AggregateGroupNode
    Reference abstractMapLayer : AbstractMapLayer

  Class SkyNode -> GroupNode
    Reference sky : Sky

  Class EarthSkyNode -> SkyNode

  Class CartesianTriangularMeshMapLayerNode -> AbstractMapLayerNode
    Operation getCartesianTriangularMeshMapLayer() : CartesianTriangularMeshMapLayer

  DataType List <java.util.List>

  DataType SortedSet <java.util.SortedSet>

  DataType Date <java.util.Date>

  DataType Point3d <javax.vecmath.Point3d>

  DataType Color3f <javax.vecmath.Color3f>

  DataType IProgressMonitor <org.eclipse.core.runtime.IProgressMonitor>
