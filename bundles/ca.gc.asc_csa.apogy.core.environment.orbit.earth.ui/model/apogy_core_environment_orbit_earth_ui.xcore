/*
 * Copyright (c) 2016 Canadian Space Agency (CSA) / Agence spatiale canadienne (ASC).
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Pierre Allard (Pierre.Allard@canada.ca), 
 *     Regent L'Archeveque (Regent.Larcheveque@canada.ca),
 *     Sebastien Gemme (Sebastien.Gemme@canada.ca),
 *     Canadian Space Agency (CSA) - Initial API and implementation
 */
@GenModel(prefix="ApogyCoreEnvironmentOrbitEarthUI",
		  childCreationExtenders="true",
		  extensibleProviderFactory="true",
		  multipleEditorPages="false",
		  copyrightText="Agence spatiale canadienne / Canadian Space Agency 2015 Copyrights (c)",
		  modelName="ApogyCoreEnvironmentOrbitEarthUI",
		  complianceLevel="8.0",
		  suppressGenModelAnnotations="false")
@GenModel(modelDirectory="/ca.gc.asc_csa.apogy.core.environment.orbit.earth.ui/src-generated")
@GenModel(editDirectory= "/ca.gc.asc_csa.apogy.core.environment.orbit.earth.ui.edit/src-generated")

package ca.gc.asc_csa.apogy.core.environment.orbit.earth.ui

import ca.gc.asc_csa.apogy.common.emf.Described
import ca.gc.asc_csa.apogy.common.emf.Named
import ca.gc.asc_csa.apogy.common.emf.Timed
import ca.gc.asc_csa.apogy.core.invocator.AbstractToolsListContainer

import ca.gc.asc_csa.apogy.core.Updatable

import ca.gc.asc_csa.apogy.core.environment.orbit.OrbitModel
import ca.gc.asc_csa.apogy.core.environment.orbit.earth.EarthSurfaceLocation
import ca.gc.asc_csa.apogy.core.environment.orbit.earth.GroundStation
import ca.gc.asc_csa.apogy.core.environment.orbit.earth.SpacecraftsVisibilitySet
import ca.gc.asc_csa.apogy.core.environment.orbit.earth.SpacecraftSwathCorridor

type RenderableLayer wraps gov.nasa.worldwind.layers.RenderableLayer
type Map<K,V> wraps java.util.Map

class EarthViewConfigurationList extends AbstractToolsListContainer
{
	contains EarthViewConfiguration[0..*] earthViewConfigurations
}

class EarthViewConfiguration extends Named, Described
{
	/** List of Maps being displayed.*/
	@GenModel(children="true", notify="true", property="None")
	contains AbstractWorldWindLayer[0..*] layers
}

/**
 * Defines a Layer that can be shown on the WordWindModel
 **/
abstract class AbstractWorldWindLayer extends Updatable
{
	/*
	 * Whether or not to display the layer.
	 */
	@GenModel(notify="true", property="Editable")
	boolean visible="true"
	
   /*
	* The RenderableLayer associated with this Layer
	*/
	@GenModel(children="false", notify="false", property="None")
	transient RenderableLayer renderableLayer
	
	/**
	 * Method called when the layer is not longer
	 * needed (i.e. when it gets deleted.)
	 */
	op void dispose()
}

class SpacecraftLocationWorldWindLayer extends AbstractWorldWindLayer, Named
{
	/*
	 * The orbit model.
	 */
	@GenModel(propertyCategory="ORBIT_MODEL")
	refers OrbitModel orbitModel
	
	/*
	 * The time source to used to get the time
	 * used to compute the S/C position.
	 */
	@GenModel(propertyCategory="TIME")
	refers Timed timeSource
	
	/*
	 * Whether or not to display the position
	 * projected on the ground.
	 */
	@GenModel(notify="true", property="Editable")
	boolean showGroundProjection = "true"	
	
	/*
	 * Whether or not to the longitude and
	 * latitude of the spacecraft.
	 */
	@GenModel(notify="true", property="Editable")
	boolean showLatLon ="true"
}

class OrbitModelWorldWindLayer extends AbstractWorldWindLayer
{
	/*
	 * The orbit model.
	 */
	@GenModel(propertyCategory="ORBIT_MODEL")
	refers OrbitModel orbitModel
	
	/*
	 * The time source to used to get the time
	 * used to define the reference time.
	 */
	@GenModel(propertyCategory="TIME")
	refers Timed timeSource
	
	/*
	 * The time interval at which to show
	 * the position.
	 */
	@GenModel(propertyCategory="TIME_PERIOD", apogy_units="s")
	double timeInterval = "600.0"
	
	/*
	 * The forward propagation duration
	 * from the current time.
	 */
	@GenModel(propertyCategory="TIME_PERIOD", apogy_units="s")
	double forwardPropagationDuration = "43200.0"
	
	/*
	 * The backward propagation duration
	 * from the current time.
	 */
	@GenModel(propertyCategory="TIME_PERIOD", apogy_units="s")
	double backwardPropagationDuration = "43200.0"	
	
	/*
	 * Whether or not to display the orbit
	 * projected on the ground.
	 */
	@GenModel(propertyCategory="VISUALS", notify="true", property="Editable")
	boolean showGroundTrace = "true"
	
	/*
	 * Whether or not to display the orbit.
	 */
	@GenModel(notify="true", propertyCategory="VISUALS", property="Editable")
	boolean showOrbit = "true"	
}

class SpacecraftSwathWorldWindLayer extends AbstractWorldWindLayer
{
	/*
	 * The orbit model.
	 */
	@GenModel(propertyCategory="ORBIT_MODEL")
	refers OrbitModel orbitModel	
	
	/*
	 * The time source to used to get the time
	 * used to define the reference time.
	 */
	@GenModel(propertyCategory="TIME")
	refers Timed timeSource
	
	/*
	 * The forward propagation duration from
	 * the current time.
	 */
	@GenModel(propertyCategory="TIME_PERIOD", apogy_units="s")
	double forwardPropagationDuration = "43200.0"
	
	/*
	 * The backward propagation duration from
	 * the current time.
	 */
	@GenModel(propertyCategory="TIME_PERIOD", apogy_units="s")
	double backwardPropagationDuration = "43200.0"	
	
	/*
	 * The time interval at which to show
	 * the position.
	 */
	@GenModel(notify="true", propertyCategory="TIME_PERIOD", property="Editable", apogy_units="s")
	double timeInterval = "600.0"
		
	@GenModel(notify="true", property="Editable", propertyCategory="SWATH", apogy_units="rad")
	double leftSwathAngle = "0"
	
	@GenModel(notify="true", property="Editable", propertyCategory="SWATH", apogy_units="rad")
	double rightSwathAngle = "0"
	
	/*
	 * Whether or not to display the orbit
	 * projected on the ground.
	 */
	@GenModel(notify="true", propertyCategory="VISUALS", property="Editable")
	boolean showGroundTrace = "true"
			
	contains SpacecraftSwathCorridor forwardSpacecraftSwathCorridor
	
	contains SpacecraftSwathCorridor backwardSpacecraftSwathCorridor
}

class EarthSurfaceLocationWorldWindLayer extends AbstractWorldWindLayer
{
	refers EarthSurfaceLocation earthSurfaceLocation
	
	/*
	 * The radius of the target.
	 */
	@GenModel(propertyCategory="VISUALS", apogy_units="km")
	double targetRadius = "50"
}

class GroundStationWorldWindLayer extends EarthSurfaceLocationWorldWindLayer
{
	refers GroundStation groundStation
	
	/*
	 * The altitude to which to project
	 * the ElevationMask.
	 */
	@GenModel(propertyCategory="VISUALS", apogy_units="km")
	double referenceAltitude = "500"
}

/**
 * Defines a list of configuration for the view that
 * shows the visibility of spacecraft from ground stations.
 */

class SpacecraftVisibilityPassViewConfigurationList extends AbstractToolsListContainer
{
	contains SpacecraftVisibilityPassViewConfiguration[0..*] configurations opposite configurationsList
}

/*
 * Defines the configuration for the view that shows the
 * visibility of spacecraft from ground stations.
 */
class SpacecraftVisibilityPassViewConfiguration extends Named, Described
{			
	@GenModel(property="None")	
	container SpacecraftVisibilityPassViewConfigurationList configurationsList opposite configurations
	
	@GenModel(notify="true", chilrend = "true", property="None")
	contains SpacecraftsVisibilitySet visibilitySet
}

