/**
 *
 * $Id$
 */
package ca.gc.asc_csa.apogy.addons.vehicle.validation;

import ca.gc.asc_csa.apogy.addons.vehicle.ContactProvider;
import ca.gc.asc_csa.apogy.addons.vehicle.MeshNodeEntry;
import ca.gc.asc_csa.apogy.addons.vehicle.OrientationCorrectionMode;
import ca.gc.asc_csa.apogy.addons.vehicle.ZCorrectionMode;

import ca.gc.asc_csa.apogy.common.math.Matrix3x3;

import ca.gc.asc_csa.apogy.common.topology.addons.dynamics.PhysicalBody;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link ca.gc.asc_csa.apogy.addons.vehicle.VehiclePoseCorrector}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface VehiclePoseCorrectorValidator {
	boolean validate();

	boolean validateInitializing(boolean value);
	boolean validateMeshes(EList<MeshNodeEntry> value);
	boolean validateContactBodies(EList<PhysicalBody> value);
	boolean validateZCorrectionMode(ZCorrectionMode value);
	boolean validateZCorrection(double value);
	boolean validateOrientationCorrectionMode(OrientationCorrectionMode value);
	boolean validateOrientationCorrection(Matrix3x3 value);
	boolean validateContactProvider(ContactProvider value);
}
