@GenModel(prefix="SymphonyExampleCamera",
		  copyrightText="Canadian Space Agency / Agence spatiale canadienne Copyright (c) 2015",
		  modelName="SymphonyExampleCamera")
@GenModel(modelDirectory="/org.eclipse.symphony.examples.camera.symphony/src-generated")
@GenModel(editDirectory="/org.eclipse.symphony.examples.camera.symphony.edit/src-generated")

package org.eclipse.symphony.examples.camera.symphony

import org.eclipse.symphony.core.SymphonySystemApiAdapter
import org.eclipse.symphony.core.SymphonyInitializationData

import ca.gc.space.mrt.sensors.fov.RectangularFrustrumFieldOfView

/*
 * This class is the Symphony API adapter that is used to
 * interface the existing basic camera implementations with
 * Symphony; this provides a series of callback methods that
 * can be overridden to implement a variety of useful features.
 */
class CameraSymphonySystemApiAdapter extends SymphonySystemApiAdapter
{
	/*
	 * For specific implementation details,
	 * please see {@link org.eclipse.symphony.examples.camera.symphony.impl.CameraSymphonySystemApiAdapterImpl}
	 */
}

/*
 * This class is the data required in order to initialize (or
 * reinitialize) the basic camera implementations.  This will
 * be used by the relevant API adapter, which in this case
 * is {@link CameraSymphonySystemApiAdapter}. 
 * @see #CameraSymphonySystemApiAdapter
 */
class CameraData extends SymphonyInitializationData
{
	/*
	 * This is the current field of view (FOV) of the camera.
	 */
	@GenModel(notify="true",
			  property="Editable",
			  propertCategory="Camera")
	contains RectangularFrustrumFieldOfView[1] fov
	
	/*
	 * This is the current zoom level of the camera. 
	 */
	@GenModel(notify="true",
			  property="Editable",
			  propertyCategory="Camera")
	double zoom
	
	/*
	 * This is whether or not the camera is initialized.
	 */
	@GenModel(notify="true",
			  property="Editable",
			  propertyCategory="Status")
	boolean initialized = "false"
}

/*
 * This class is the Symphony API adapter that is used to
 * interface the existing PTU camera implementations with
 * Symphony; this provides a series of callback methods that
 * can be overridden to implement a variety of useful features.
 */
class PTUCameraSymphonySystemApiAdapter extends SymphonySystemApiAdapter
{	
	/*
	 * For specific implementation details,
	 * please see {@link org.eclipse.symphony.examples.camera.symphony.impl.PTUCameraSymphonySystemApiAdapterImpl}
	 */
}

/*
 * This class is the data required in order to initialize (or
 * reinitialized) the basic camera implementations.  This will
 * be used by the relevant API adapter, which in this case
 * is {@link PTUCameraSymphonySystenApiAdapter}.
 * @see #PTUCameraSymphonySystemApiAdapter
 */
class PTUCameraData extends CameraData
{
	/*
	 * This is the current pan angle of the Pan-Tilt Unit (PTU)
	 * that the camera is mounted on.
	 */
	@GenModel(csa_units="�",
			  notify="true",
			  property="Editable",
			  propertyCategory="PTU Angles")
	double panAngle
	
	/*
	 * This is the current tilt angle of the Pan-Tilt Unit (PTU)
	 * that the camera is mounted on.
	 */
	@GenModel(csa_units="�",
			  notify="true",
			  property="Editable",
			  propertyCategory="PTU Angles")
	double tiltAngle
}
