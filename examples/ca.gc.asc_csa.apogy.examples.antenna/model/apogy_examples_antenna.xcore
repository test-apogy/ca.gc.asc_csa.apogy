/*
 * Copyright (c) 2016 Canadian Space Agency (CSA) / Agence spatiale canadienne (ASC).
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Pierre Allard (Pierre.Allard@canada.ca), 
 *     Regent L'Archeveque (Regent.Larcheveque@canada.ca),
 *     Sebastien Gemme (Sebastien.Gemme@canada.ca),
 *     Canadian Space Agency (CSA) - Initial API and implementation
 */
@GenModel(prefix="ApogyExamplesAntenna",
		  copyrightText="Canadian Space Agency / Agence spatiale canadienne - Copyright (c) 2015",
		  modelName="ApogyExamplesAntenna",
		  childCreationExtenders="true",
		  extensibleProviderFactory="true",
		  suppressGenModelAnnotations="false")
@GenModel(modelDirectory="/ca.gc.asc_csa.apogy.examples.antenna/src-generated")
@GenModel(editDirectory="/ca.gc.asc_csa.apogy.examples.antenna.edit/src-generated")

package ca.gc.asc_csa.apogy.examples.antenna

import ca.gc.asc_csa.apogy.addons.sensors.fov.ConicalFieldOfView

/*
 * This class represents the abstract concept of an antenna.
 */
abstract class Antenna
{
	/*
	 * This is whether or not the antenna has been successfully
	 * initialized; initially false
	 * @see #init()
	 */
	@GenModel(children="false",
			  notify="true",
			  property="Readonly",
			  propertyCategory="Status")
	boolean initialized = "false" 
	
	/*
	 * This operation is used to perform the operations
	 * (if any) required to initialize the antenna
	 * @return Whether or not the antenna was successfully initialized
	 */
	op boolean init()
}

/*
 * This class represents an abstract dish-based variety of antenna,
 * which has a particular conical field of view (FOV).  
 */
abstract class DishAntenna extends Antenna
{	
	/* 
	 * This is the (conical) field of view that all dish-based antennas possess
	 */
	@GenModel(children="true",
			  notify="true",
			  property="Readonly",
			  propertyCategory="Field Of View")
	contains ConicalFieldOfView[1] fov	
}

/*
 * This class represents an abstract dish-based antenna,
 * which is mounted upon a pan-tilt unit (PTU).  Naturally,
 * the pan and tilt angles are kept track of and can be changed
 * accordingly.  In addition, there is an option for the
 * antenna to track the position of the sun in the sky.  
 */
abstract class PTUDishAntenna extends DishAntenna
{
	/* 
	 * This is the current pan angle (given in radians) of the
	 * PTU, that the antenna is attached to.
	 */	
	@GenModel(children="false",
			  notify="true",
			  apogy_units="rad",
			  property="Readonly",
			  propertyCategory="PTU Angles")
	double panAngle
	
	/*
	 * This is the current tilt angle (given in radians) of the PTU
	 * that the antenna is attached to.
	 */
	@GenModel(children="false",
			  notify="true",
			  apogy_units="rad",
			  property="Readonly",
			  propertyCategory="PTU Angles")
	double tiltAngle
	
	/*
	 * This is whether or not the PTU antenna should be tracking 
	 * the sun.
	 */
	@GenModel(children="false",
			  notify="true",
			  property="Readonly",
			  propertyCategory="Tracking")
	boolean trackingSun = "false"
	
	/* 
	 * Command the PTU (and implicitly the antenna) to move to the
	 * specified pan and tilt angles.
	 * 
	 * @param panAngle The target pan angle for the PTU (given in radians.)
	 * @param tiltAngle The target tilt angle for the PTU (given in radians.)
	 */
	op void moveTo(@GenModel(apogy_units="rad") double panAngle,
				   @GenModel(apogy_units="rad") double tiltAngle)
	
	/*
	 * This is used to toggle whether the PTU (and implicitly the
	 * antenna mounted on it) should be following the sun.  If
	 * true, then the antenna will continue tracking the sun until
	 * it is told otherwise.
	 *
	 * @param track Whether or not the PTU antenna should be following the sun.
	 */
	op void trackSun(boolean track)
}

/* 
 * This is a specific implementation of the PTU dish antenna, in which
 * all operations are stubs and hence, non-functional; the operations
 * should simply log a message, indicating that they were performed.
 */
class PTUDishAntennaStub extends PTUDishAntenna
{
	/* 
	 * For specific implementation details,
	 * see {@link ca.gc.asc_csa.apogy.examples.antenna.impl.PTUDishAntennaStubImpl}
	 */
}

/*
 * This is a simulated implementation of the PTU dish antenna, where all
 * operations are executed upon a simulated (i.e. virtual) antenna. While
 * there are no physical components interacted with, it attempts to emulate,
 * wherever possible, the actions and results of its real world counterpart(s).  
 */
class PTUDishAntennaSimulated extends PTUDishAntenna
{
	/*
	 * For specific implementation details,
	 * see {@link ca.gc.asc_csa.apogy.examples.antenna.impl.PTUDishAntennaSimulatedImpl}
	 */
}
