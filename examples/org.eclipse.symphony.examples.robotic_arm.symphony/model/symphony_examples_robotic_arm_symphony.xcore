@GenModel(prefix="SymphonyExampleRoboticArm", copyrightText="Canadian Space Agency / Agence spatiale canadienne Copyright (c) 2015", modelName="SymphonyExampleRoboticArm")
@GenModel(modelDirectory="/org.eclipse.symphony.examples.robotic_arm.symphony/src-generated")
@GenModel(editDirectory="/org.eclipse.symphony.examples.robotic_arm.symphony.edit/src-generated")

package org.eclipse.symphony.examples.robotic_arm.symphony

import org.eclipse.symphony.core.SymphonySystemApiAdapter
import org.eclipse.symphony.core.SymphonyInitializationData

import org.eclipse.symphony.examples.robotic_arm.MoveSpeedLevel

/*
 * This class is the specialized Symphony API adapter, used for connecting
 * the existing robotic arm example, located at
 * {@link org.eclipse.symphony.examples.robotic_arm.RoboticArm},
 * to Symphony; one can override the well-known callback functions to make
 * Symphony perform a variety of useful functions, including initialization,
 * disposal and other features. 
 */
class RoboticArmSymphonySystemApiAdapter extends SymphonySystemApiAdapter
{
	/*
	 * For specific implementation details,
	 * please see
	 * {@link org.eclipse.symphony.examples.robotic_arm.symphony.impl.RoboticArmSymphonySystemApiAdapterImpl}
	 */
}

/*
 * This class is the specialized data structure which is used to essentially
 * save and later restore the state of the component; this functionality is
 * implemented by the apply() (load) and collect() (save) methods of the robotic
 * arm's API adapter,
 * which is {@link org.eclipse.symphony.examples.robotic_arm.symphony.RoboticArmSymphonySystemApiAdapter}.
 */
class RoboticArmData extends SymphonyInitializationData
{
	/*
	 * This is whether or not the robotic arm should be initialized.
	 */
	@GenModel(children="false",
			  notify="true",
			  property="Editable",
			  propertyCategory="Status")
	boolean initialized = "false"
	
	/*
	 * This is how quickly the robotic arm should be moving,
	 * out of the several possible speeds.
	 */
	@GenModel(children="false",
			  notify="true",
			  property="Editable",
			  propertyCategory="Status")
	MoveSpeedLevel speed
	
	/*
	 * This is the angle (in degrees) that the robotic arm's turret joint should be at.
	 */
	@GenModel(csa_units="�",
			  children="false",
			  notify="true",
			  property="Editable",
			  propertyCategory="Joint Angles")
	double turretAngle
	
	/*
	 * This is the angle (in degrees) that the robotic arm's shoulder joint should be at.
	 */
	@GenModel(csa_units="�",
			  children="false",
			  notify="true",
			  property="Editable",
			  propertyCategory="Joint Angles")
	double shoulderAngle
	
	/*
	 * This is the angle (in degrees) that the robotic arm's elbow joint should be at.
	 */
	@GenModel(csa_units="�",
			  children="false",
			  notify="true",
			  property="Editable",
			  propertyCategory="Joint Angles")
	double elbowAngle
	
	/*
	 * This is the angle (in degrees) that the robotic arm's wrist joint should be at.
	 */
	@GenModel(csa_units="�",
			  children="false",
			  notify="true",
			  property="Editable",
			  propertyCategory="Joint Angles")
	double wristAngle
}
